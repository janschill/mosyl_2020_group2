grammar org.mdse.pts.schedule.dsl.Schedule hidden(WS, ML_COMMENT, SL_COMMENT)

import "http://mdse.org/pts/network" as networkM
import "http://mdse.org/pts/depot" as depotM
import "http://mdse.org/pts/time" as timeM
import "http://mdse.org/pts/schedule"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

 
Schedule:
	"SCHEDULE" "FOR" networkReference=NetworkReference "WITH" depotReference+=DepotReference ("," depotReference+=DepotReference)* ":" 
	(routeReference+=Route)+
;

//Network
NetworkReference:
	(network=[networkM::Network|STRING] | network=[networkM::Network|ID])
;


//Depot  
DepotReference:
	(depot=[depotM::Depot|STRING] | depot=[depotM::Depot|ID])
;

//Route
Route:
"TRAIN" (train=[depotM::Train|STRING] | train=[depotM::Train|ID])
"ON"
time+=STime
("AND" time+=STime)* ":"

"START" transits+=Transit
(("DRIVE" "VIA" transits+=Transit) | ("STOP" transits+=Transit))*
"TERMINATE" transits+=Transit 
;

Transit:
(leg=[networkM::Leg|STRING] | leg=[networkM::Leg|ID]) | ( "AT" station=[networkM::Station|STRING] "ON" "PLATFORM" platform=Platform ("FOR" standingDuration=INT "MIN")?)
;

Platform:
	name=STRING
;

STime:
day+=Day ("," day+=Day)* "AT" hrmin+=HrMin ("AND" hrmin+=HrMin)*
;

HrMin:
	hour=INT":"minute=INT
;

enum Day returns timeM::Day:
 Monday = "Monday" | Tuesday = "Tuesday" | Wednesday = "Wednesday" | Thursday = "Thursday" | Friday = "Friday" | Saturday = "Saturday" | Sunday = "Sunday"
;

//TODO: Define syntax rules

terminal fragment LETTER:
	('a'..'z' | 'A'..'Z')
;

terminal fragment DIGIT:
	('0'..'9')
;

terminal ID:
	'^'?('_' | LETTER) ('_' | LETTER | DIGIT )*
;

terminal INT returns ecore::EInt:
	DIGIT+
;

terminal STRING:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
;
 
terminal ML_COMMENT:
	'/*' -> '*/'
;

terminal SL_COMMENT:
	'//' !('\n'|'\r')* ('\r'? '\n')?
;

terminal WS:
	(' '|'\t'|'\r'|'\n')+
; 